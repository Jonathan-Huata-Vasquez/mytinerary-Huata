{"version":3,"sources":["helpers/ciudades.js","components/carrousel/MiSlide.js","components/carrousel/MiCarousel.js","pages/Home.js","components/CiudadesFiltradas.js","components/esqueletos/EsqueletoCiudadesFiltradas.js","redux/actions/citiesActions.js","pages/Cities.js","helpers/tostadas.js","redux/actions/authActions.js","helpers/endpoints.js","pages/SignUp.js","pages/LogIn.js","pages/ErrorHTTP/Error404.js","pages/ErrorHTTP/Error500.js","redux/actions/cityItineraryAction.js","components/activities/CajaComentario.js","components/esqueletos/EsqueletoCarrousel.js","components/activities/ItineraryActivities.js","components/BtnLike.js","components/Itinerario.js","components/esqueletos/EsqueletoItinerario.js","pages/CityItineraries.js","components/headerComponentes/BotonLogin.js","components/headerComponentes/LinkNav.js","components/headerComponentes/NavBar.js","components/headerComponentes/ListaMobile.js","components/headerComponentes/CajonListaMobile.js","components/headerComponentes/Header.js","components/Footer.js","components/ScrollToTop.js","App.js","redux/reducers/citiesReducer.js","redux/reducers/cityItineraryReducer.js","redux/reducers/authReducer.js","redux/reducers/mainReducer.js","index.js"],"names":["respuestaFetch","id","nombreCiudad","foto","MiSlide","grupoElementos","estiloSlide","estiloImagen","propTitulo","propUrlImagen","className","map","unElemento","style","backgroundImage","MiCarousel","elementos","cantidadElementosSlide","interval","gruposElementos","retorno","i","length","unGrupo","slice","push","obtenerGruposElementos","useState","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","previous","slides","unGrupoElementos","indice","CarouselItem","onExiting","onExited","keysGruposElementos","JSON","stringify","Carousel","CarouselIndicators","items","onClickHandler","newIndex","CarouselControl","direction","directionText","Home","props","ciudades","src","alt","Container","fluid","Row","Col","Typography","variant","to","Button","color","CiudadesFiltradas","ciudad","Zoom","in","transitionDelay","_id","EsqueletoCiudadesFiltradas","highlightColor","duration","width","height","citiesAction","obtenerCiudades","dispatch","getState","axios","get","then","res","type","payload","data","respuesta","catch","error","obtenerCiudadesAMostrar","inputValor","restaurarEstadoInicial","dispath","useStyle","makeStyles","textField","backgroundColor","borderRadius","border","mapDispatchToProps","cargarCiudades","modificarCiudadesAMostrar","connect","state","estadoCities","citiesReducer","misEstilos","useEffect","todasLasCiudades","error500","TextField","label","onChange","e","target","value","loading","ciudadesAMostrar","configuracionTostadaDefault","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","mostrarTostada","tipo","message","toast","success","info","console","log","mostrarTostadaError500","authActions","crearUsuario","valoresInputs","a","post","errores","nombreCompleto","loguearUsuario","usuario","history","logueoForzadoPorLS","token","headers","alert","response","status","localStorage","clear","window","location","reload","desloguearUsuario","SignUp","errorPaises500","visibleContrasena","paises","nombre","apellido","email","contrasena","usuarioAvatar","pais","propiedad","valor","this","setState","estadoActual","name","objUsuario","conGoogle","campos","Object","keys","hayCamposVacios","forEach","campo","estaVacio","iterableSetError","trim","unError","profileObj","usuarioGoogle","enviar","givenName","familyName","googleId","imageUrl","classes","CircularProgress","size","clientId","buttonText","onSuccess","respuestaGoogle","onFailure","cookiePolicy","render","renderProps","onClick","btnGoogle","startIcon","xmlns","fill","fillRule","d","inputEstilo","leerInput","helperText","FormControl","InputLabel","OutlinedInput","autoComplete","endAdornment","InputAdornment","IconButton","cambiarVisibilidadContrasena","edge","labelWidth","FormHelperText","Select","MenuItem","React","Component","withStyles","minWidth","marginTop","transition","transform","LogIn","setError","values","some","Alert","severity","Error404","Error500","cityItineraryActions","cargarItinerarios","idCiudad","usuarioLogueado","authReducer","endpoint","header","cargarCiudad","restaurarItinerarios","cargarActividadesDeItinerario","itinerarioId","likearItinerario","idItinerario","modificarComentario","body","idComentario","comentario","accion","put","theme","borderradius","estiloTextField","estiloInputEditando","flexGrow","estiloSendSVG","estiloSVGCancelar","background","estiloSVGEditar","marginRight","estiloSVGBorrar","borrarComentario","comentarios","estaAbierto","titulo","funcionAEjecutar","modal","setModal","cerrarModal","comentarioAPostear","setComentarioAPostear","nuevoComentario","comentarioAEditar","setComentarioAEditar","procesandoPeticionPostear","setProcesandoPeticionPostear","procesandoPeticionEditar","setProcesandoPeticionEditar","procesandoPeticionBorrar","setProcesandoPeticionBorrar","comentarioSiendoBorrado","setComentarioSiendoBorrado","solicitarModificarComentario","setCargandoPeticion","limpiarInput","mostrarModal","currentTarget","dataset","idcomentario","find","unComentario","agregarParrafos","texto","split","unRenglon","usuarioId","esModificable","Tooltip","title","placement","arrow","data-idcomentario","colocarTexfieldDeEditacion","fullWidth","disabled","autoFocus","rowsMax","multiline","leerInputEditar","margin","join","placeholder","leerInputPostear","Modal","isOpen","toggle","wordWrap","ModalHeader","ModalBody","ModalFooter","EsqueletoCarrouselActivities","ItineraryActivities","actividades","EsqueletoCarrousel","estaLikeado","cantidadLikes","estado","setEstado","peticionando","setPeticionando","likear","estadoAntesDeActualizar","btnViewMoreEstilo","borderColor","borderWidth","unItinerario","estaExpandido","setEstaExpandido","refBtnViewMore","useRef","crearNComponentes","n","componente","Array","from","_","cargarActividades","current","focus","autorFoto","autorNombre","precio","duracion","href","ref","likes","hashTags","hashTag","Collapse","endIcon","EsqueletoItinerario","circle","City","match","params","ciudadActual","error500Itinerarios","itinerariosCiudad","itinerario","cityItineraryReducer","menuDesplegable","menuAbierto","setMenuAbierto","cerrarMenu","Hidden","xsDown","aria-controls","aria-haspopup","event","Avatar","fontSize","Menu","anchorEl","open","Boolean","onClose","activeClassName","LinkNav","link","contenidoTexto","estiloClase","url","exact","useStyles","navMargin","mixins","toolbar","navegacionLinks","display","menuHamburguesaBoton","spacing","breakpoints","up","navBoton","down","NavBar","abrirCerrarDrawer","links","AppBar","Toolbar","cerrarDrawer","pathname","useLocation","List","component","ListItem","button","ListItemIcon","ListItemText","primary","Divider","anchoCajon","cajon","flexShrink","cajonPaper","navBarBottonMargin","Cajon","variante","abierto","Drawer","paper","anchor","ListaMobile","Header","setAbierto","mdUp","CajonListaMobile","Footer","xs","lg","ScrollToTop","onbeforeunload","scrollTo","App","getItem","parse","path","Cities","inicialState","action","nuevasCiudades","valorInput","filter","toLowerCase","startsWith","initialState","itinerariosActualizados","setItem","mainReducer","combineReducers","miStore","createStore","applyMiddleware","thunk","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.d214b1a1.chunk.js","sourcesContent":["export  const respuestaFetch = [\r\n    {id : 1,nombreCiudad : \"Antalya\",foto : \"ciudades/antalya.jpg\"},\r\n    {id : 2,nombreCiudad : \"Bangkok\",foto : \"ciudades/bangkok.jpg\"},\r\n    {id : 3,nombreCiudad : \"Buenos Aires \",foto : \"ciudades/buenosAires.jpg\"},\r\n    {id : 4,nombreCiudad : \"Dubai\",foto : \"ciudades/dubai.jpg\"},\r\n    {id : 5,nombreCiudad : \"Rio de Janeiro\",foto : \"ciudades/rioDeJaneiro.jpg\"},\r\n    {id : 6,nombreCiudad : \"Kuala Lumpur\",foto : \"ciudades/kualaLumpur.jpg\"},\r\n    {id : 7,nombreCiudad : \"London\",foto : \"ciudades/london.jpg\"},\r\n    {id : 8,nombreCiudad : \"New Delhi\",foto : \"ciudades/newDelhi.jpg\"},\r\n    {id : 9,nombreCiudad : \"New York\",foto : \"ciudades/newYork.jpg\"},\r\n    {id : 10,nombreCiudad : \"Paris\",foto : \"ciudades/paris.jpg\"},\r\n    {id : 11,nombreCiudad : \"Rome\",foto : \"ciudades/rome.jpg\"},\r\n    {id : 12,nombreCiudad : \"Tokyo\",foto : \"ciudades/Tokyo.jpg\"},\r\n]\r\n\r\n\r\n\r\nexport function obtenerGruposElementos(elementos,cantidadElementosSlide = 1){\r\n     if(cantidadElementosSlide <= 0){\r\n        cantidadElementosSlide = 1;\r\n     }\r\n\r\n    let retorno = [];\r\n    for(let i = 0; i< elementos.length; i += cantidadElementosSlide){\r\n        let unGrupo = elementos.slice(i,i+ cantidadElementosSlide);\r\n        retorno.push(unGrupo)\r\n    }\r\n\r\n    return retorno;   \r\n}","\r\nconst MiSlide = ({grupoElementos,estiloSlide,estiloImagen,propTitulo,propUrlImagen}) =>{\r\n    return (\r\n        <div className ={estiloSlide}>\r\n            {grupoElementos.map( (unElemento) => \r\n                <div key={unElemento[propUrlImagen]} className ={estiloImagen} style ={{backgroundImage: `url(/assets/${unElemento[propUrlImagen]})`}}>\r\n                    <div className =\"nombreCiudad\">{unElemento[propTitulo]}</div>\r\n                </div>\r\n            )}\r\n        </div> \r\n    );\r\n}\r\n/*itinerarios/antalya/ruinsInAntalya/aspendos.jpg */\r\n/*style ={{backgroundImage: `url(./assets/${unElemento[propUrlImagen]})`}}> */\r\nexport default MiSlide;","import React, { useState } from 'react';\r\nimport {Carousel,CarouselItem,CarouselControl,CarouselIndicators,} from 'reactstrap';\r\nimport {  obtenerGruposElementos } from '../../helpers/ciudades'\r\n\r\nimport MiSlide from './MiSlide.js'\r\n\r\n\r\n\r\nconst MiCarousel = ({elementos,cantidadElementosSlide,estiloSlide,estiloImagen,propTitulo,propUrlImagen,interval = 3000}) => {\r\n  let gruposElementos = obtenerGruposElementos(elementos,cantidadElementosSlide);\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false); //esto es para evitar usar los controles manuales mientras esta la animacion de cambio de slide\r\n\r\n  const next = () => {  //actualiza el indexActual (el estado) al siguiente o a 0 si esta en el ultimo slide\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === gruposElementos.length - 1 ? 0 : activeIndex + 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const previous = () => { //actualiza el indexActual (el estado) al anterior o al ultimo de los slide si esta en el primer slide\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === 0 ? gruposElementos.length - 1 : activeIndex - 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  //Este nos actualizara el indece actual al pasado por parametro (si no se esta animando)\r\n  //nos servira para las franjas que nos dibuja <CarouselIndicators />\r\n  const goToIndex = (newIndex) => {\r\n    if (animating) return;\r\n    setActiveIndex(newIndex);\r\n  }\r\n\r\n  //un array de CarouselItem que se inyectan en <Caroucel>\r\n  const slides = gruposElementos.map((unGrupoElementos,indice) => {\r\n    return (\r\n      <CarouselItem\r\n        //onExiting y onExited Es de React Transition Group\r\n        //les damos a cada Item del carrousel por props los metodos(como funcion callback) que usara intenamente Hacer las animaciones\r\n        //asi cuando esta usando una animacion de cambio de slide , cambie nuestro estado animating\r\n        //lo mismo cuando termina la animacion\r\n        onExiting={() => setAnimating(true)}  \r\n        onExited={() => setAnimating(false)}\r\n        key={indice}\r\n      >\r\n        {/*Le colocamos como contenido del item , un slide propio  */}\r\n        <MiSlide grupoElementos ={unGrupoElementos} \r\n          estiloSlide = {estiloSlide} \r\n          estiloImagen={estiloImagen} \r\n          propTitulo = {propTitulo} \r\n          propUrlImagen= {propUrlImagen}\r\n        />\r\n      </CarouselItem>\r\n    );\r\n  });\r\n  \r\n  \r\n  //esto es para que no nos tire error internamente Reacstrap de hijos de una lista contenga unica key\r\n  let keysGruposElementos = gruposElementos.map(unGrupoElementos => JSON.stringify(unGrupoElementos));\r\n\r\n  return (\r\n    <div className =\"MiCarrouselEstilo\">\r\n      <Carousel\r\n        activeIndex={activeIndex}\r\n        next={next} // para agregarle funcionalidad a los botones del teclado\r\n        previous={previous} //\r\n        interval = {interval}\r\n      >\r\n        {/*CarouselIndicador nos dibujara una cantidad CarouselItem en franjas y brillara la fraja relacionada al actual item \r\n        Tambien le agregara funcionalidades a las franjas de que al clickear una , le cambie el estado de nuestro activeIndex\r\n        al indice que tiene esa franja\r\n        */}\r\n        \r\n        <CarouselIndicators items={keysGruposElementos} activeIndex={activeIndex} onClickHandler={goToIndex} />\r\n        {/*inyectamos nuestros CarouselItem armados anteriormente */}\r\n        {/*slides*/}\r\n        {slides}\r\n        {/*Colocamos los botones de anterior y y le pasamos por props (lo mas importante) la funcion que cambia nuestro estado del indexActual */}\r\n        <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\r\n        <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\r\n      </Carousel>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default MiCarousel;","import { Typography } from '@material-ui/core'\r\nimport { respuestaFetch,  } from '../helpers/ciudades.js'\r\nimport MiCarousel from '../components/carrousel/MiCarousel'\r\n\r\nimport { Container, Row, Col, Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nconst Home = (props) => {\r\n    \r\n\r\n    let ciudades = respuestaFetch;\r\n\r\n    //esto es porque no logro poner el estilo del background-image del hero \r\n    const estiloBackgroundImagen = \"linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2)) , url(./assets/opcHero5.gif)\"\r\n    return (\r\n        <div className =\"contenedorHome\">\r\n            <div className=\"hero\" style={{ backgroundImage: estiloBackgroundImagen }}>\r\n                <img src=\"assets/logoCompleto2.png\" alt=\"logoHome\" className=\"logoHero\" />\r\n                <h1>MyTinerary</h1>\r\n                <h2 className=\"mt-5\">Find your perfect trip, designed by insiders who know and love their cities!</h2>\r\n            </div>\r\n            <Container fluid={true}>\r\n                <Row>\r\n                    <Col >\r\n                        <div className=\"callToAction \" style={{ backgroundImage: `url(./assets/callToAction.jpg)` }}>\r\n                            <div className=\"flex-grow-1 mt-5 \">\r\n                                <Typography variant=\"h3\" >TIME TO TRAVEL</Typography>\r\n                            </div>\r\n                            <div className=\"mb-4 d-flex flex-column align-items-center\">\r\n                                <h3>Make your dreams come true</h3>\r\n                                <Link to=\"/Cities\">\r\n                                    <Button color=\"info\">Show Me!</Button>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <h3 className=\"mt-5 mb-3\">Popular MYtineraries</h3>\r\n            <MiCarousel \r\n                elementos={ciudades} \r\n                cantidadElementosSlide={4} \r\n                estiloSlide=\"slideEstilo-4\" \r\n                estiloImagen=\"imagenCarrousel-4\" \r\n                propTitulo=\"nombreCiudad\"\r\n                propUrlImagen=\"foto\"\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import { Link } from 'react-router-dom'\r\nimport Zoom from '@material-ui/core/Zoom';\r\nconst CiudadesFiltradas = ({ ciudades }) => {\r\n    return (\r\n        <div className=\"portaCiudadadesFiltradas\">\r\n\r\n            {(!ciudades || ciudades.length === 0) &&\r\n                <div className=\"ciudadNoEncontrada\" style={{ backgroundImage: \"url(/assets/ciudadNoEncontrada.jpg)\" }}>\r\n                    <div className=\"nombreCiudad\">\r\n                        It seems that the city you are looking for is not yet ... Try another!\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n            {ciudades.map(ciudad => {\r\n                return (\r\n                    <Zoom in={true} style={{ transitionDelay: '100ms' }} key={ciudad._id}>\r\n                        <Link className=\"LinkBlancoNone\" to={`/cities/${ciudad._id}`} >\r\n                            <div className=\"fotoCiudadCities\" style={{ backgroundImage: `url(/assets/ciudades/${ciudad.foto})` }}>\r\n                                <div className=\"nombreCiudad\">{ciudad.nombreCiudad}</div>\r\n                            </div>\r\n                        </Link>\r\n                    </Zoom>\r\n\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CiudadesFiltradas;","import Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\n\r\nconst EsqueletoCiudadesFiltradas = () => {\r\n    \r\n    return (\r\n        <div className=\"portaCiudadadesFiltradas\">\r\n            <SkeletonTheme color=\"#eceff1\"  highlightColor =\"#90caf9\">\r\n                <Skeleton duration={0.25}  width=\"40vw\" height=\"30vh\" className=\"esqueletoFotoCiudadCities\" />\r\n                <Skeleton duration={0.25}  width=\"40vw\" height=\"30vh\" className=\"esqueletoFotoCiudadCities\" />\r\n                <Skeleton duration={0.25}  width=\"40vw\" height=\"30vh\" className=\"esqueletoFotoCiudadCities\" />\r\n                <Skeleton duration={0.25}  width=\"40vw\" height=\"30vh\" className=\"esqueletoFotoCiudadCities\" />\r\n            </SkeletonTheme>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EsqueletoCiudadesFiltradas;","import axios from \"axios\";\r\n\r\nconst citiesAction = {\r\n    obtenerCiudades: () => {\r\n        return (dispatch,getState) =>{\r\n            axios.get(\"http://localhost:4000/api/cities\")\r\n            .then(res => dispatch({type: \"CARGAR_CIUDADES\",payload: res.data.respuesta}))\r\n            .catch(error => {\r\n                dispatch({type:\"ERROR_FETCHEO\",payload:null,})\r\n                //dispatch(citiesAction.restaurarEstadoInicial())\r\n            })\r\n        }  \r\n    },\r\n    obtenerCiudadesAMostrar: (inputValor) => {\r\n        return (dispatch,getState) => {\r\n            dispatch({type:\"CARGAR_CIUDADES_A_MOSTRAR\",payload:inputValor});\r\n        }\r\n    },\r\n    restaurarEstadoInicial:()=>{\r\n        return (dispath,getState) =>{\r\n            dispath({type:\"RESTAURAR_ESTADO_INICIAL_CITIES\",payload:null});\r\n        }\r\n    }\r\n}\r\n\r\nexport default citiesAction;","\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useEffect } from 'react';\r\nimport CiudadesFiltradas from '../components/CiudadesFiltradas';\r\nimport EsqueletoCiudadesFiltradas from '../components/esqueletos/EsqueletoCiudadesFiltradas';\r\nimport {connect} from 'react-redux';\r\nimport citiesAction from '../redux/actions/citiesActions';\r\nimport {Redirect} from 'react-router-dom';\r\nconst useStyle = makeStyles({\r\n    textField: {\r\n        backgroundColor: \"white\",\r\n        width: \"80%\",\r\n        borderRadius:\"5px\",\r\n        \"&.Mui-focused\": {\r\n            border: \"2px solid red\",\r\n        }\r\n    },\r\n});\r\n\r\nconst Cities = ({estadoCities,cargarCiudades,modificarCiudadesAMostrar,restaurarEstadoInicial}) => {\r\n    const misEstilos = useStyle();\r\n     \r\n    /*Este solo se ejecutara al montar ,luego del \"render\"*/\r\n    useEffect(() => {\r\n        if(estadoCities.todasLasCiudades.length === 0){\r\n            cargarCiudades();\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    //componenteWillUnmount()\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            if(estadoCities.error500) restaurarEstadoInicial();\r\n        }\r\n        // eslint-disable-next-line\r\n    },[])\r\n    \r\n    if (estadoCities.error500) {\r\n        return (\r\n            <div className=\"contenedorCities mt-3 px-5\">\r\n                <Redirect to =\"error500\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"contenedorCities\">\r\n            <div className=\"portadaCities \" style={{ backgroundImage: \"url(./assets/portadaCities.jpg)\" }}>\r\n                <div className=\"portaTituloFiltradorCities\" >\r\n                    <h1>The best experiences, activities and destinations</h1>\r\n                    {<TextField className={`${misEstilos.textField} mt-3 `} label=\"Find your City\" variant=\"filled\" onChange={(e) => modificarCiudadesAMostrar(e.target.value)} />}\r\n                </div>\r\n            </div>\r\n            {estadoCities.loading ? <EsqueletoCiudadesFiltradas /> :\r\n                <CiudadesFiltradas ciudades={estadoCities.ciudadesAMostrar} />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        estadoCities : state.citiesReducer,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    cargarCiudades: citiesAction.obtenerCiudades,//esto es la referencia a una funcion \r\n    modificarCiudadesAMostrar :  citiesAction.obtenerCiudadesAMostrar,\r\n    restaurarEstadoInicial: citiesAction.restaurarEstadoInicial\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Cities);","import { toast } from 'react-toastify';\r\n\r\nconst configuracionTostadaDefault = (position) =>{\r\n    return  {\r\n        position: position,\r\n        autoClose: 3500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    }\r\n}\r\n\r\nexport function mostrarTostada(tipo, message, position = \"top-right\",) {\r\n    \r\n    switch (tipo) {\r\n        case \"error\":\r\n            toast.error(message, configuracionTostadaDefault(position));\r\n            break;\r\n        case \"success\":\r\n            toast.success(message, configuracionTostadaDefault(position));\r\n            break;\r\n        case \"info\":\r\n            toast.info(message, configuracionTostadaDefault(position));\r\n            break;\r\n        default:\r\n            console.log(\"default\")\r\n    }\r\n}\r\n\r\nexport function mostrarTostadaError500( position = \"top-right\",) {\r\n    toast.error(\"ups , something went wrong, please try again... \", configuracionTostadaDefault(position));\r\n}\r\n\r\nexport function mostrarTostadaNecesarioLoguearse( position = \"top-right\",) {\r\n    const configuracionTostada = {\r\n        position: position,\r\n        autoClose: 3500,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    }\r\n    toast.info(\"ups , something went wrong, please try again... \", configuracionTostada);\r\n}\r\n","import { endpointUserLogIn, endpointUserSignUp, endpointUserLogInToken } from '../../helpers/endpoints'\r\nimport axios from 'axios';\r\nimport { mostrarTostada, mostrarTostadaError500 } from '../../helpers/tostadas'\r\nconst authActions = {\r\n    crearUsuario: (valoresInputs) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const { data } = await axios.post(endpointUserSignUp, valoresInputs)\r\n                if (!data.success) {\r\n                    return data.errores;\r\n                }\r\n                mostrarTostada(\"success\", `Welcome ${data.respuesta.nombreCompleto}`, \"top-right\");\r\n                dispatch({ type: \"LOGUEAR_USER\", payload: data.respuesta })\r\n            }\r\n            catch (e) {//error en la comunicacion con el backend\r\n                console.log(e);\r\n                mostrarTostadaError500();\r\n            }\r\n\r\n        }\r\n    },\r\n    loguearUsuario: (usuario, history) => {\r\n        return async (dispatch, getState) => {\r\n            //obtengo respuesta y la destructuro\r\n            try {\r\n                const { data } = await axios.post(endpointUserLogIn, usuario)\r\n                console.log(data)\r\n                if (!data.success) {\r\n                    return data.error;\r\n                }\r\n                mostrarTostada(\"success\", `Welcome ${data.respuesta.nombreCompleto}`, \"top-right\");\r\n                dispatch({ type: \"LOGUEAR_USER\", payload: data.respuesta })\r\n\r\n            } catch (err) {\r\n                mostrarTostadaError500();\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    logueoForzadoPorLS: (token, history) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const { data } = await axios.get(endpointUserLogInToken, {\r\n                    headers: { 'Authorization': 'Bearer ' + token }\r\n                })\r\n                dispatch({\r\n                    type: \"LOGUEAR_USER\", payload: {\r\n                        ...data.respuesta,\r\n                        token\r\n                    }\r\n                });\r\n            }\r\n            catch (err) {\r\n                alert(\"Error 500 , please come back later\")\r\n                console.log(err)\r\n                if (err.response && err.response.status === 401) {\r\n                    alert(\"try harder next time\")\r\n                    localStorage.clear();\r\n                    window.location.reload(true);\r\n                    //history.push(\"/\");\r\n                }\r\n                mostrarTostadaError500();\r\n                localStorage.clear();\r\n            }\r\n        }\r\n    },\r\n    desloguearUsuario: () => {\r\n        return (dispatch, getState) => {\r\n            mostrarTostada(\"info\", \"Come back later \", \"top-right\");\r\n            dispatch({ type: \"DESLOGUEAR_USER\" })\r\n        }\r\n    }\r\n}\r\n\r\nexport default authActions;","export const endpointCities = \"https://mytinerary-jonathan-huata.herokuapp.com/api/cities\";\r\nexport const endpointItineraries = \"https://mytinerary-jonathan-huata.herokuapp.com/api/itineraries\";\r\nexport const endpointItinerariesOfCity = \"https://mytinerary-jonathan-huata.herokuapp.com/api/itineraries/city\";\r\nexport const endpointItinerariesOfCityLogueado = \"https://mytinerary-jonathan-huata.herokuapp.com/api/itinerariesLogueado/city\";\r\nexport const endpointItinerariesModificarComentario = \"https://mytinerary-jonathan-huata.herokuapp.com/api/itineraries/modificarComentario\";\r\nexport const endpointItinerariesLike = \"https://mytinerary-jonathan-huata.herokuapp.com/api/itinerariesLike\";\r\nexport const endpointUserSignUp = \"https://mytinerary-jonathan-huata.herokuapp.com/api/user/signup\";\r\nexport const endpointUserLogIn = \"https://mytinerary-jonathan-huata.herokuapp.com/api/user/login\";\r\nexport const endpointUserLogInToken = \"https://mytinerary-jonathan-huata.herokuapp.com/api/user/loginLS\";\r\nexport const endpointActivitiesItinerary = \"https://mytinerary-jonathan-huata.herokuapp.com/api/activities/itinerary\";\r\n","import React from 'react'\r\n\r\n//material-ui\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport authActions from '../redux/actions/authActions'\r\nimport { connect } from 'react-redux'\r\nimport GoogleLogin from 'react-google-login';\r\nimport {mostrarTostada} from '../helpers/tostadas'\r\nimport { CircularProgress } from '@material-ui/core';\r\nconst estilos = ({\r\n    inputEstilo: {\r\n        width: \"80%\",\r\n        minWidth: \"236px\",\r\n        marginTop: \"1.5rem\"\r\n    },\r\n    btnGoogle: {\r\n        backgroundColor: \"#343a40\",\r\n        color: \"white\",\r\n        transition: \"transform,0.25s\",\r\n        '&:hover': {\r\n            backgroundColor: \"#01579b\",\r\n            transform: \"scale(1.1)\"\r\n        }\r\n    }\r\n})\r\n\r\nclass SignUp extends React.Component {\r\n\r\n    state = {\r\n        loading: true,\r\n        errorPaises500: false,\r\n        visibleContrasena: false,\r\n        paises: [],\r\n        valoresInputs: {\r\n            nombre: \"\",\r\n            apellido: \"\",\r\n            email: \"\",\r\n            contrasena: \"\",\r\n            usuarioAvatar: \"\",\r\n            pais: \"\"\r\n        },\r\n        error:{\r\n            nombre: \"\",\r\n            apellido: \"\",\r\n            email: \"\",\r\n            contrasena: \"\",\r\n            usuarioAvatar: \"\",\r\n        }\r\n    }\r\n\r\n    iterableSetError(propiedad, valor){\r\n        //setState(updater, [callback])\r\n        // La salida del updater se fusiona de forma superficial (shallow) con state.\r\n        this.setState(estadoActual =>{\r\n            return {\r\n                error: {\r\n                    ...estadoActual.error,\r\n                    [propiedad]:valor\r\n                }\r\n            }\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        axios.get(\"https://restcountries.eu/rest/v2/all\")\r\n            .then(res => this.setState({\r\n                ...this.state,\r\n                loading: false,\r\n                paises: res.data.map(pais => pais.name)\r\n            }))\r\n            .catch(error => this.setState({\r\n                ...this.state,\r\n                loading: false,\r\n                errorPaises500: true,\r\n            }))\r\n    }\r\n\r\n    cambiarVisibilidadContrasena() {\r\n        this.setState({\r\n            ...this.state,\r\n            visibleContrasena: !this.state.visibleContrasena\r\n        })\r\n\r\n    }\r\n    leerInput(e) {\r\n        this.setState({\r\n            ...this.state,\r\n            valoresInputs: {\r\n                ...this.state.valoresInputs,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n   async enviar(objUsuario,conGoogle = false) {\r\n        if(!conGoogle){\r\n            let campos = Object.keys(this.state.valoresInputs);\r\n            let hayCamposVacios = false;\r\n            //\r\n            campos.forEach(campo =>{\r\n                const estaVacio =  campo !==\"pais\" && objUsuario[campo] === \"\" ;\r\n                hayCamposVacios =  estaVacio ? true : hayCamposVacios;\r\n                this.iterableSetError(campo,estaVacio ? \"This field is required\" : \"\")\r\n            })\r\n            if (hayCamposVacios) return null;\r\n        }\r\n\r\n        //Veo si hay erroes del backend\r\n        let errores = await this.props.crearUsuario({\r\n            ...objUsuario,\r\n            nombre: objUsuario.nombre.trim(),\r\n            apellido: objUsuario.apellido.trim()\r\n        },conGoogle);\r\n\r\n        if(errores){\r\n            if(conGoogle){\r\n                \r\n                mostrarTostada(\"error\",errores[0].message,\"top-right\");\r\n            }\r\n            else{\r\n                errores.forEach(unError=> this.iterableSetError(unError.label,unError.message))\r\n            }\r\n        }   \r\n    }\r\n    respuestaGoogle(response){\r\n        //en caso de que el usuario cierre el popup\r\n        if(!response.profileObj) return null;\r\n        \r\n        const usuarioGoogle = response.profileObj\r\n        this.enviar({\r\n            nombre: usuarioGoogle.givenName,\r\n            apellido:usuarioGoogle.familyName,\r\n            email: usuarioGoogle.email,\r\n            contrasena:\"google\"+ usuarioGoogle.googleId +\"myTinerary\",\r\n            usuarioAvatar: usuarioGoogle.imageUrl,\r\n            pais: \"\"\r\n        },true)\r\n    }\r\n    \r\n    render() {\r\n        const { classes: misEstilos } = this.props //me traen los estilos como classes\r\n        if (this.state.loading) {\r\n            return (\r\n                <div className=\"contenedorSignUp\">\r\n                    {this.state.errorPaises500 \r\n                    ?<h1>Ups, please reload the page</h1> \r\n                    :<div className =\"pantallaDeCarga\">\r\n                        <h1>Loading...</h1>\r\n                        <CircularProgress size={100}/>\r\n                    </div>\r\n                    \r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"contenedorSignUp\">\r\n                <h2>Create your account</h2>\r\n                <div className=\"contenedorFormularioBtnGoogle\">\r\n                    \r\n                    <GoogleLogin\r\n                        className =\"btnGoogle\"\r\n                        clientId=\"915285624748-bcfmc9ot4g7uqtc1q3rf1n7qvf1o7pbi.apps.googleusercontent.com\"\r\n                        buttonText=\"Sign up\"\r\n                        onSuccess={(response)=>this.respuestaGoogle(response)}\r\n                        onFailure={(response)=>this.respuestaGoogle(response)}\r\n                        cookiePolicy={'single_host_origin'}\r\n                        render={renderProps => (\r\n                            <Button\r\n                                onClick ={renderProps.onClick}\r\n                                className={misEstilos.btnGoogle}\r\n                                variant=\"contained\"\r\n                                startIcon={<svg width=\"18\" height=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"#000\" fillRule=\"evenodd\"><path d=\"M9 3.48c1.69 0 2.83.73 3.48 1.34l2.54-2.48C13.46.89 11.43 0 9 0 5.48 0 2.44 2.02.96 4.96l2.91 2.26C4.6 5.05 6.62 3.48 9 3.48z\" fill=\"#EA4335\"></path><path d=\"M17.64 9.2c0-.74-.06-1.28-.19-1.84H9v3.34h4.96c-.1.83-.64 2.08-1.84 2.92l2.84 2.2c1.7-1.57 2.68-3.88 2.68-6.62z\" fill=\"#4285F4\"></path><path d=\"M3.88 10.78A5.54 5.54 0 0 1 3.58 9c0-.62.11-1.22.29-1.78L.96 4.96A9.008 9.008 0 0 0 0 9c0 1.45.35 2.82.96 4.04l2.92-2.26z\" fill=\"#FBBC05\"></path><path d=\"M9 18c2.43 0 4.47-.8 5.96-2.18l-2.84-2.2c-.76.53-1.78.9-3.12.9-2.38 0-4.4-1.57-5.12-3.74L.97 13.04C2.45 15.98 5.48 18 9 18z\" fill=\"#34A853\"></path><path fill=\"none\" d=\"M0 0h18v18H0z\"></path></g></svg>}\r\n                            >  \r\n                                Sign up with Google  \r\n                            </Button>    \r\n                        )}\r\n                    />\r\n\r\n                    <div className=\"separador\">\r\n                        <h5>Or</h5>\r\n                    </div>\r\n\r\n                    <form className=\"formulario\">\r\n\r\n                        <TextField\r\n                            error = {this.state.error.nombre === \"\" ? false:true}\r\n                            name=\"nombre\"\r\n                            label=\"First name\"\r\n                            variant=\"outlined\"\r\n                            className={misEstilos.inputEstilo}\r\n                            onChange={(e) => this.leerInput(e)}\r\n                            value={this.state.valoresInputs.nombre}\r\n                            helperText= {this.state.error.nombre}\r\n                            size=\"small\"\r\n                        />\r\n                        <TextField\r\n                            error = {this.state.error.apellido === \"\" ? false:true}\r\n                            helperText= {this.state.error.apellido}\r\n                            name=\"apellido\"\r\n                            label=\"Last name\"\r\n                            variant=\"outlined\"\r\n                            onChange={(e) => this.leerInput(e)}\r\n                            value={this.state.valoresInputs.apellido}\r\n                            className={misEstilos.inputEstilo}\r\n                            size=\"small\"\r\n                        />\r\n                        <TextField\r\n                            error = {this.state.error.email === \"\" ? false:true}\r\n                            helperText= {this.state.error.email}\r\n                            name=\"email\"\r\n                            label=\"Email\"\r\n                            variant=\"outlined\"\r\n                            onChange={(e) => this.leerInput(e)}\r\n                            value={this.state.valoresInputs.email}\r\n                            className={misEstilos.inputEstilo}\r\n                            size=\"small\"\r\n                        />\r\n                        <FormControl \r\n                            variant=\"outlined\" \r\n                            className={misEstilos.inputEstilo} \r\n                            error = {this.state.error.contrasena === \"\" ? false:true}\r\n                            size=\"small\"\r\n                        >\r\n                            <InputLabel>Password</InputLabel>\r\n                            <OutlinedInput\r\n                                \r\n                                autoComplete=\"off\"\r\n                                name=\"contrasena\"\r\n                                type={this.state.visibleContrasena ? 'text' : 'password'}\r\n                                value={this.state.valoresInputs.contrasena}\r\n                                onChange={(e) => this.leerInput(e)}\r\n                                endAdornment={ //pongo al final el icono\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            onClick={() => this.cambiarVisibilidadContrasena()}\r\n                                            edge=\"end\" //para darle un margin respecto a su espacio reservado\r\n                                        >\r\n                                            {this.state.visibleContrasena ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                labelWidth={70} //el ancho del label cuando esta focuseado\r\n                            />\r\n                            <FormHelperText id=\"component-error-text\">{this.state.error.contrasena}</FormHelperText>\r\n                        </FormControl>\r\n                        <TextField\r\n                            size=\"small\"\r\n                            error = {this.state.error.usuarioAvatar === \"\" ? false:true}\r\n                            helperText= {this.state.error.usuarioAvatar}\r\n                            name=\"usuarioAvatar\"\r\n                            label=\"Enter the URL of your picture\"\r\n                            variant=\"outlined\"\r\n                            onChange={(e) => this.leerInput(e)}\r\n                            value={this.state.valoresInputs.usuarioAvatar}\r\n                            className={misEstilos.inputEstilo}\r\n                        />\r\n                        <FormControl variant=\"outlined\" className={misEstilos.inputEstilo} size=\"small\">\r\n                            <InputLabel >Country</InputLabel>\r\n                            <Select\r\n                                name=\"pais\"\r\n                                label=\"Country\"//reserva espacio para el label\r\n                                value={this.state.valoresInputs.pais}\r\n                                onChange={(e) => this.leerInput(e)}\r\n                            >\r\n                                <MenuItem  value={\"\"}>...</MenuItem>\r\n                                {this.state.paises.map(pais => {\r\n                                    return <MenuItem key={pais} value={pais}>{pais}</MenuItem>\r\n                                })}\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"mt-3\" onClick={() => this.enviar(this.state.valoresInputs)}>\r\n                            Sign Up !\r\n                        </Button>\r\n\r\n                        <h5 className=\"mt-3 mx-3\">Have an account? </h5>\r\n                        <h4><Link to=\"/login\" className=\"callToActionFormulario\">Log in now</Link></h4>\r\n                    </form>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    crearUsuario: authActions.crearUsuario\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(estilos)(SignUp))\r\n\r\n/*\r\n\r\n\r\n\r\n\r\n*/","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom'\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { connect } from 'react-redux'\r\nimport authActions from '../redux/actions/authActions';\r\nimport GoogleLogin from 'react-google-login';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport { toast,ToastContainer } from 'react-toastify';\r\n\r\n\r\nconst estilos = ({\r\n    inputEstilo: {\r\n        width: \"80%\",\r\n        minWidth: \"236px\",\r\n        marginTop: \"1.5rem\"\r\n    },\r\n    btnGoogle: {\r\n        backgroundColor: \"#343a40\",\r\n        color: \"white\",\r\n        transition: \"transform,0.25s\",\r\n        '&:hover': {\r\n            backgroundColor: \"#01579b\",\r\n\r\n            transform: \"scale(1.1)\"\r\n        }\r\n    },\r\n\r\n})\r\nclass LogIn extends React.Component {\r\n    \r\n    state = {\r\n        visibleContrasena: false,\r\n        valoresInputs: {\r\n            email: \"\",\r\n            contrasena: \"\"\r\n        },\r\n        error: \"\"\r\n    }\r\n    setError(unError) {\r\n        this.setState({\r\n            ...this.state,\r\n            error: unError\r\n        })\r\n    }\r\n    \r\n    leerInput(e) {\r\n        this.setState({\r\n            ...this.state,\r\n            valoresInputs: {\r\n                ...this.state.valoresInputs,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    cambiarVisibilidadContrasena() {\r\n        \r\n        this.setState({\r\n            ...this.state,\r\n            visibleContrasena: !this.state.visibleContrasena\r\n        })\r\n    }\r\n    respuestaGoogle(response) {\r\n        if (!response.profileObj) {//en caso de que el usuario cierre el popup\r\n            return null;\r\n        }\r\n        const usuarioGoogle = response.profileObj;\r\n        this.enviar({\r\n            email: usuarioGoogle.email,\r\n            contrasena: \"google\" + usuarioGoogle.googleId + \"myTinerary\",\r\n        }, true)\r\n    }\r\n\r\n\r\n\r\n    async enviar(objUsuario, conGoogle = false) {\r\n        this.setError(\"\");\r\n        if (!conGoogle) {\r\n            const valoresCampos = Object.values(this.state.valoresInputs) ;\r\n            if (valoresCampos.some(campo => campo === \"\")) {\r\n                this.setError(\"All the fields must be filled\")\r\n                return null;\r\n            }\r\n        }\r\n\r\n        //Envio los datos y en caso de errores de validaciones, lo trato\r\n        const error = await this.props.loguearUsuario(objUsuario)\r\n        if (!error)\r\n            return null\r\n\r\n        if (conGoogle) {\r\n            toast.error(\"This google account is not registered\", {\r\n                position: \"top-right\",\r\n                autoClose: 3500,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        } else {\r\n            this.setError(error);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { classes: misEstilos } = this.props;\r\n        return (\r\n            <div className=\"contenedorLogIn\">\r\n                <ToastContainer />\r\n                <h2>Log in to your account</h2>\r\n                <div className=\"contenedorFormularioBtnGoogle\">\r\n                    <GoogleLogin\r\n                        clientId=\"915285624748-bcfmc9ot4g7uqtc1q3rf1n7qvf1o7pbi.apps.googleusercontent.com\"\r\n                        buttonText=\"Sign up\"\r\n                        onSuccess={(response) => this.respuestaGoogle(response)}\r\n                        onFailure={(response) => this.respuestaGoogle(response)}\r\n                        cookiePolicy={'single_host_origin'}\r\n                        render={renderProps => (\r\n                            <Button\r\n                                onClick={renderProps.onClick}\r\n                                className={misEstilos.btnGoogle}\r\n                                variant=\"contained\"\r\n                                startIcon={<svg width=\"18\" height=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"#000\" fillRule=\"evenodd\"><path d=\"M9 3.48c1.69 0 2.83.73 3.48 1.34l2.54-2.48C13.46.89 11.43 0 9 0 5.48 0 2.44 2.02.96 4.96l2.91 2.26C4.6 5.05 6.62 3.48 9 3.48z\" fill=\"#EA4335\"></path><path d=\"M17.64 9.2c0-.74-.06-1.28-.19-1.84H9v3.34h4.96c-.1.83-.64 2.08-1.84 2.92l2.84 2.2c1.7-1.57 2.68-3.88 2.68-6.62z\" fill=\"#4285F4\"></path><path d=\"M3.88 10.78A5.54 5.54 0 0 1 3.58 9c0-.62.11-1.22.29-1.78L.96 4.96A9.008 9.008 0 0 0 0 9c0 1.45.35 2.82.96 4.04l2.92-2.26z\" fill=\"#FBBC05\"></path><path d=\"M9 18c2.43 0 4.47-.8 5.96-2.18l-2.84-2.2c-.76.53-1.78.9-3.12.9-2.38 0-4.4-1.57-5.12-3.74L.97 13.04C2.45 15.98 5.48 18 9 18z\" fill=\"#34A853\"></path><path fill=\"none\" d=\"M0 0h18v18H0z\"></path></g></svg>}\r\n                            >  Log in with Google  </Button>\r\n                        )}\r\n                    />\r\n\r\n                    <div className=\"separador\">\r\n                        <h5>Or</h5>\r\n                    </div>\r\n\r\n                    <form className=\"formulario\">\r\n                        <TextField\r\n                            name=\"email\"\r\n                            label=\"Email\"\r\n                            variant=\"outlined\"\r\n                            className={misEstilos.inputEstilo}\r\n                            onChange={(e) => this.leerInput(e)}\r\n                            value={this.state.valoresInputs.email}\r\n                        />\r\n\r\n                        <FormControl variant=\"outlined\" className={misEstilos.inputEstilo}>\r\n                            <InputLabel>Password</InputLabel>\r\n                            <OutlinedInput\r\n                                autoComplete=\"off\"\r\n                                name=\"contrasena\"\r\n                                type={this.state.visibleContrasena ? 'text' : 'password'}\r\n                                value={this.state.valoresInputs.contrasena}\r\n                                onChange={(e) => this.leerInput(e)}\r\n                                endAdornment={ //pongo al final el icono\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            onClick={() => this.cambiarVisibilidadContrasena()}\r\n                                            edge=\"end\" //para darle un margin respecto a su espacio reservado\r\n                                        >\r\n                                            {this.state.visibleContrasena ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                labelWidth={70} //el ancho del label cuando esta focuseado\r\n                            />\r\n                        </FormControl>\r\n                        {this.state.error && (\r\n                            <Zoom in={true} style={{ transitionDelay: '250ms' }}>\r\n                                <Alert severity=\"error\" className={misEstilos.inputEstilo}>{this.state.error}</Alert>\r\n                            </Zoom>\r\n                        )}\r\n\r\n                        <Button variant=\"contained\" color=\"primary\" className=\"mt-3\" onClick={() => this.enviar(this.state.valoresInputs)} >\r\n                            Log in !\r\n                        </Button>\r\n\r\n                        <h5 className=\"mt-3 mx-3\">Don't have an account? </h5>\r\n                        <h4><Link to=\"/signup\" className=\"callToActionFormulario\">Sign up </Link></h4>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    loguearUsuario: authActions.loguearUsuario\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withStyles(estilos)(LogIn))","const Error404 = () => {\r\n    return (\r\n        <div className=\"errorContenedor\">\r\n            <h1>Error 404: Page Not Found\r\n                We could not find what you were looking for.\r\n                Please contact the owner of the site that linked you to the original URL and let them know their link is broken.\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\nexport default Error404;","const Error500 = () =>{\r\n    return (\r\n    <div className=\"errorContenedor\">\r\n        <img src=\"/assets/error-500.png\" alt=\"error500\" className=\"w-100\"/>\r\n    </div>\r\n    )\r\n}\r\nexport default Error500;","import axios from \"axios\";\r\nimport {endpointCities,endpointActivitiesItinerary,endpointItinerariesOfCity,\r\n    endpointItinerariesLike,endpointItinerariesOfCityLogueado,\r\n    endpointItinerariesModificarComentario} from \"../../helpers/endpoints\"\r\nimport {mostrarTostada,mostrarTostadaError500} from '../../helpers/tostadas'\r\n\r\nconst cityItineraryActions = {\r\n    cargarItinerarios :   (idCiudad)=>{\r\n        return async (dispatch,getState)  => {\r\n            let usuarioLogueado = getState().authReducer.usuarioLogueado;\r\n            try{\r\n                const endpoint = usuarioLogueado ? endpointItinerariesOfCityLogueado :endpointItinerariesOfCity;\r\n                let header = usuarioLogueado && {headers:{'Authorization': 'Bearer ' + usuarioLogueado.token}}\r\n                const {data} = await axios.get(`${endpoint}/${idCiudad}`,header)\r\n                dispatch({type : \"CARGAR_ITINERARIOS\",payload: data.respuesta})\r\n            }\r\n            catch(e){\r\n                console.log(e)\r\n                mostrarTostadaError500();\r\n                dispatch({type : \"ERROR_CARGAR_CIUDAD\", payload:null})\r\n            }\r\n        }\r\n    },\r\n    cargarCiudad : (idCiudad)=>{\r\n        return  async () => {\r\n            try{\r\n                let {data} = await axios.get(`${endpointCities}/${idCiudad}`)\r\n                if(data.success){\r\n                    return data.respuesta;}\r\n                else{\r\n                    mostrarTostada(\"error\",data.error,\"top-right\");\r\n                }//getState()\r\n\r\n            }catch(e){\r\n                mostrarTostadaError500()\r\n            }\r\n            \r\n        }\r\n    },\r\n    restaurarItinerarios: ()=>{\r\n        return (dispatch,getState) =>{\r\n            dispatch({type:\"RESTAURAR_ITINERARIOS\",payload:null});\r\n        }\r\n    },\r\n    cargarActividadesDeItinerario :  (itinerarioId) =>{  \r\n        return async ()=>{\r\n            try {\r\n                let {data} = await axios.get(`${endpointActivitiesItinerary}/${itinerarioId}`)\r\n                if(data.success)\r\n                    return data.respuesta;\r\n                else\r\n                    mostrarTostada(\"error\",data.error,\"top-right\")    \r\n            } catch (err) {\r\n                console.log(err);\r\n                mostrarTostadaError500();\r\n            }\r\n        }\r\n    },\r\n    likearItinerario : (token,idItinerario) => {\r\n        return async (dispatch,getState) => {\r\n            try{\r\n                const {data} = await axios.get(`${endpointItinerariesLike}/${idItinerario}`,{\r\n                    headers:{'Authorization': 'Bearer ' + token}\r\n                })\r\n                dispatch({type:\"ACTUALIZAR_ITINERARIO\",payload:data.respuesta})\r\n                return {success :true}\r\n            }catch(e){\r\n                console.log(e);\r\n                mostrarTostadaError500();\r\n                return {success :false}    \r\n            }\r\n        }\r\n    },\r\n    modificarComentario : (idItinerario,token,body) => {\r\n        const {idComentario,comentario,accion} = body;\r\n\r\n        return async (dispatch) =>{\r\n            try{\r\n                let {data} = await axios.put(`${endpointItinerariesModificarComentario  }/${idItinerario}`,{idComentario,comentario,accion},{\r\n                    headers:{\r\n                        'Authorization': 'Bearer ' + token,    \r\n                    }\r\n                });\r\n                \r\n                data.success\r\n                ? dispatch({type:\"ACTUALIZAR_ITINERARIO\",payload:data.respuesta}) \r\n                : mostrarTostada(\"error\",data.error);\r\n                return data.success;\r\n                \r\n            }catch(e){\r\n                console.log(e);\r\n                mostrarTostadaError500();\r\n            }   \r\n        }\r\n    },\r\n    \r\n\r\n\r\n\r\n}\r\nexport default cityItineraryActions;","import IconButton from '@material-ui/core/IconButton';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { useState } from 'react';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n//import Input from '@material-ui/core/Input';\r\nimport { connect } from 'react-redux'\r\nimport cityItineraryActions from '../../redux/actions/cityItineraryAction'\r\nimport { mostrarTostada, } from '../../helpers/tostadas'\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nconst useStyle = makeStyles(theme => ({\r\n\r\n    '*::-webkit-scrollbar': {\r\n        width: '10px'\r\n    },\r\n    '*::-webkit-scrollbar-track': {\r\n        backgroundColor: \"rgba(54, 99, 110, 0.662)\",\r\n        borderradius: \"25px\",\r\n    },\r\n    '*::-webkit-scrollbar-thumb': {\r\n        backgroundColor: \"#53afe4\",\r\n        borderRadius: \"25px\",\r\n    }\r\n    ,\r\n\r\n    estiloTextField: {\r\n        backgroundColor: \"white\",\r\n        borderRadius: \"5px\",\r\n        marginTop: \"1em\",\r\n        \"&::placeholder\": {\r\n            color: \"black\",\r\n            backgroundColor: \"#53afe4\",\r\n        },\r\n        '*::-webkit-scrollbar': {\r\n            width: '10px'\r\n        },\r\n        '*::-webkit-scrollbar-track': {\r\n            backgroundColor: \"rgba(54, 99, 110, 0.662)\",\r\n            borderradius: \"25px\",\r\n        },\r\n        '*::-webkit-scrollbar-thumb': {\r\n            backgroundColor: \"#53afe4\",\r\n            borderRadius: \"25px\",\r\n        }\r\n    },\r\n    estiloInputEditando: {\r\n        color: \"white\",\r\n        flexGrow: 1,\r\n        marginTop: \"10px\",\r\n\r\n    },\r\n    estiloSendSVG: {\r\n        color: \"#5994ce\",\r\n    },\r\n    estiloSVGCancelar: {\r\n        color: \"red\",\r\n        '&:hover': {\r\n            background: \"white\",\r\n        },\r\n    },\r\n    estiloSVGEditar: {\r\n        color: \"white\",\r\n        marginRight: \"5px\",\r\n        '&:hover': {\r\n            background: \"grey\",\r\n        },\r\n    },\r\n    estiloSVGBorrar: {\r\n        color: \"red\",\r\n        '&:hover': {\r\n            background: \"#f38f8f\",\r\n        },\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst CajaComentario = ({ idItinerario, comentarios, usuarioLogueado, modificarComentario }) => {\r\n    const misEstilos = useStyle();\r\n    const [modal, setModal] = useState({\r\n        estaAbierto: false,\r\n        body: \"\",\r\n        titulo: \"\",\r\n        idComentario: \"\",\r\n        funcionAEjecutar: null,\r\n        accion: \"\"\r\n    });\r\n\r\n    //Para abrir o cerrar el Modal\r\n    const cerrarModal = () => {\r\n        setModal({\r\n            estaAbierto: false,\r\n            body: \"\",\r\n            titulo: \"\",\r\n            idComentario: \"\",\r\n            funcionAEjecutar: null,\r\n            accion: \"\"\r\n        });\r\n\r\n    }\r\n\r\n\r\n    const [comentarioAPostear, setComentarioAPostear] = useState({\r\n        comentario: \"\",\r\n    });\r\n\r\n    const [comentarioAEditar, setComentarioAEditar] = useState({\r\n        idComentario: \"\",\r\n        nuevoComentario: \"\",\r\n    })\r\n\r\n    const leerInputPostear = (e) => {\r\n        setComentarioAPostear({\r\n            ...comentarioAPostear,\r\n            comentario: e.target.value\r\n        })\r\n    }\r\n    const leerInputEditar = (e) => {\r\n        setComentarioAEditar({\r\n            ...comentarioAEditar,\r\n            nuevoComentario: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n\r\n    const [procesandoPeticionPostear, setProcesandoPeticionPostear] = useState(false)\r\n    const [procesandoPeticionEditar, setProcesandoPeticionEditar] = useState(false)\r\n    const [procesandoPeticionBorrar, setProcesandoPeticionBorrar] = useState(false)\r\n    const [comentarioSiendoBorrado, setComentarioSiendoBorrado] = useState(\"\")\r\n    const solicitarModificarComentario = async (accion, idComentario = null) => {\r\n        if (!usuarioLogueado)\r\n            return mostrarTostada(\"info\", \"You must be logged in to comment it\");\r\n        let comentario;\r\n        let setCargandoPeticion;\r\n        switch (accion) {\r\n            case \"agregar\":\r\n                comentario = comentarioAPostear.comentario;\r\n                setCargandoPeticion = setProcesandoPeticionPostear;\r\n                break;\r\n            case \"editar\":\r\n                comentario = comentarioAEditar.nuevoComentario;\r\n\r\n                setCargandoPeticion = setProcesandoPeticionEditar;\r\n                cerrarModal();\r\n                break;\r\n            case \"borrar\":\r\n                setCargandoPeticion = setProcesandoPeticionBorrar;\r\n                setComentarioSiendoBorrado(idComentario);\r\n                cerrarModal();\r\n                break;\r\n            default:\r\n                console.log(\"accion desconocida: \" + accion)\r\n        }\r\n        setCargandoPeticion(true);\r\n        let pedidoExitoso = await modificarComentario(idItinerario, usuarioLogueado.token, { idComentario, comentario, accion })\r\n\r\n        if (pedidoExitoso) {\r\n            limpiarInput(accion);\r\n        }\r\n        setComentarioSiendoBorrado(\"\");\r\n        setCargandoPeticion(false)\r\n    }\r\n\r\n    const limpiarInput = (accion) => {\r\n        if (accion === \"editar\") { setComentarioAEditar({ idComentario: \"\", nuevoComentario: \"\", }) }\r\n        if (accion === \"agregar\") { setComentarioAPostear({ comentario: \"\" }) }\r\n    }\r\n\r\n    const colocarTexfieldDeEditacion = (e) => {\r\n        const idComentario = e.currentTarget.dataset.idcomentario;\r\n        setComentarioAEditar({\r\n            ...comentarioAEditar,\r\n            idComentario: idComentario,\r\n            nuevoComentario: comentarios.find(comentario => comentario._id === idComentario).comentario\r\n        })\r\n    }\r\n\r\n    const mostrarModal = (accion, e) => {\r\n        const idComentario = e.currentTarget.dataset.idcomentario;\r\n        const funcionAEjecutar = solicitarModificarComentario\r\n        let titulo, body;\r\n        switch (accion) {\r\n            case \"editar\":\r\n                titulo = \"¿ Are you sure to save the changes ?\"\r\n                body = comentarioAEditar.nuevoComentario;\r\n                break;\r\n            case \"borrar\":\r\n                let comentario = comentarios.find(unComentario => unComentario._id === idComentario).comentario;\r\n                titulo = \" Are you sure you want to delete the comment ? \";\r\n                body = comentario;\r\n                break;\r\n            default:\r\n                return null;\r\n        }\r\n\r\n        setModal({\r\n            ...modal,\r\n            estaAbierto: true,\r\n            body,\r\n            idComentario,\r\n            titulo,\r\n            funcionAEjecutar,\r\n            accion\r\n        })\r\n    }\r\n    const agregarParrafos = (texto) => {\r\n        return (\r\n            <span >{\r\n                texto.split(\"\\n\").map((unRenglon, indice) => {\r\n                    return (\r\n                        <p key={unRenglon + indice}>{unRenglon}</p>\r\n                    )\r\n                })\r\n            }</span>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"contenedorCajaComentario\" style={{ backgroundImage: \"url(/assets/fondoComentarios.png)\" }}>\r\n            <div className=\"TodosLosComentarios\">\r\n                {comentarios.map((unComentario) => {\r\n                    let nombreCompleto = unComentario.usuarioId.nombre + \" \" + unComentario.usuarioId.apellido;\r\n                    return (\r\n                        <div className={usuarioLogueado && unComentario.esModificable ? \"portaAvatarComentarioLogueado\" : \"portaAvatarComentario\"} key={unComentario._id}>\r\n                            <div className={usuarioLogueado && unComentario.esModificable ? \"avatarLogueado\" : \"avatar\"} style={{ backgroundImage: `url(${unComentario.usuarioId.usuarioAvatar})` }}></div>\r\n                            <div className={!usuarioLogueado || !unComentario.esModificable ? \"portaNombreUsuarioYComentario\" : comentarioAEditar.idComentario === \"\" ? \"portaNombreUsuarioYComentarioLogueado\" : \"portaNombreUsuarioYComentarioEditando\"} >\r\n                                <div className=\"portaNombreUsuarioYOpcionesComentario\">\r\n                                    <div className=\"espacioNombreUsuarioComentario\"><h5>{nombreCompleto}</h5></div>\r\n                                    {(usuarioLogueado && unComentario.esModificable) &&\r\n                                        <div className=\"opcionesComentarios\">\r\n                                            {comentarioAEditar.idComentario === unComentario._id\r\n                                                ?\r\n                                                <Tooltip title=\"Cancel\" placement=\"top\" arrow>\r\n                                                    <IconButton\r\n                                                        onClick={() => limpiarInput(\"editar\")}\r\n                                                        edge=\"end\"\r\n                                                        size=\"small\"\r\n                                                        data-idcomentario={unComentario._id}\r\n                                                        className={misEstilos.estiloSVGCancelar}\r\n                                                    >\r\n                                                        <CancelIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n\r\n\r\n                                                : procesandoPeticionBorrar ||\r\n                                                <>\r\n                                                    <Tooltip title=\"Edit\" placement=\"top\" arrow>\r\n                                                        <IconButton\r\n                                                            onClick={(e) => colocarTexfieldDeEditacion(e)}\r\n                                                            edge=\"end\"\r\n                                                            size=\"small\"\r\n                                                            data-idcomentario={unComentario._id}\r\n                                                            className={misEstilos.estiloSVGEditar}\r\n                                                        >\r\n                                                            <EditIcon />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                    <Tooltip title=\"Delete\" placement=\"top\" arrow>\r\n                                                        <IconButton\r\n                                                            edge=\"end\"\r\n                                                            size=\"small\"\r\n\r\n                                                            onClick={(e) => mostrarModal(\"borrar\", e)}\r\n                                                            data-idcomentario={unComentario._id}\r\n                                                            className={misEstilos.estiloSVGBorrar}\r\n                                                        >\r\n                                                            <DeleteIcon />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            }\r\n                                            {comentarioSiendoBorrado === unComentario._id && <CircularProgress size={25} style={{ color: \"red\" }} />}\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                {comentarioAEditar.idComentario === unComentario._id\r\n                                    ? (\r\n                                        <FormControl variant=\"outlined\" className={misEstilos.estiloTextField} fullWidth={true} size=\"small\">\r\n                                            <OutlinedInput\r\n                                                disabled={procesandoPeticionPostear}\r\n                                                autoFocus={true}\r\n                                                rowsMax={4}\r\n                                                multiline={true}\r\n                                                type='text'\r\n                                                value={comentarioAEditar.nuevoComentario}\r\n                                                onChange={(e) => leerInputEditar(e)}\r\n                                                endAdornment={\r\n                                                    procesandoPeticionEditar\r\n                                                        ? <InputAdornment position=\"end\">\r\n                                                            <CircularProgress size={25} style={{ margin: \"12px\" }} />\r\n                                                        </InputAdornment>\r\n                                                        :\r\n                                                        <InputAdornment position=\"end\">\r\n                                                            <IconButton\r\n                                                                data-idcomentario={unComentario._id}\r\n                                                                onClick={(e) => mostrarModal(\"editar\", e)}\r\n                                                                disabled={comentarioAEditar.nuevoComentario.split(\"\\n\").join(\"\") === \"\"}\r\n                                                                edge=\"end\"\r\n                                                            >\r\n                                                                <SendIcon className={misEstilos.estiloSendSVG} />\r\n                                                            </IconButton>\r\n                                                        </InputAdornment>\r\n                                                }\r\n                                            />\r\n                                        </FormControl>)\r\n                                    : (\r\n                                        <div className=\"comentario\">\r\n                                            {agregarParrafos(unComentario.comentario)}\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <div className=\"formularioComentario\">\r\n                <FormControl variant=\"outlined\" className={misEstilos.estiloTextField} fullWidth={true} size=\"small\" >\r\n                    <OutlinedInput\r\n                        rowsMax={4}\r\n                        placeholder={usuarioLogueado ? \"Leave your comment here\" : \"You must be logued to comment it\"}\r\n                        multiline={true}\r\n                        type='text'\r\n                        value={usuarioLogueado ? comentarioAPostear.comentario : \"\"}\r\n                        onChange={(e) => leerInputPostear(e)}\r\n                        endAdornment={\r\n                            procesandoPeticionPostear\r\n\r\n                                ? <InputAdornment position=\"end\">\r\n                                    <CircularProgress size={25} style={{ margin: \"12px\" }} />\r\n                                </InputAdornment>\r\n                                :\r\n                                <Tooltip title=\"Send\" placement=\"top\" arrow>\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            disabled={comentarioAPostear.comentario.split(\"\\n\").join(\"\") === \"\"}\r\n                                            onClick={() => solicitarModificarComentario(\"agregar\")}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            <SendIcon className={misEstilos.estiloSendSVG} />\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                </Tooltip>\r\n                        }\r\n                    />\r\n                </FormControl>\r\n            </div>\r\n            <div >\r\n\r\n                {/*<Button color=\"danger\" onClick={toggle}></Button>*/}\r\n\r\n\r\n                <Modal isOpen={modal.estaAbierto} toggle={cerrarModal} style={{ marginTop: \"33vh\", wordWrap: \"break-word\" }}>\r\n                    <ModalHeader toggle={cerrarModal}>{modal.titulo}</ModalHeader>\r\n                    <ModalBody>\r\n                        {agregarParrafos(modal.body)}\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"primary\" data-idcomentario={modal.idComentario} onClick={() => modal.funcionAEjecutar(modal.accion, modal.idComentario)}> Yes !</Button>{' '}\r\n                        <Button color=\"danger\" onClick={cerrarModal}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        usuarioLogueado: state.authReducer.usuarioLogueado\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    modificarComentario: cityItineraryActions.modificarComentario,\r\n    borrarComentario: cityItineraryActions.borrarComentario\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CajaComentario);\r\n\r\n/*\r\n<div className={ comentarioAEditar.idComentario === \"\" ? \"portaNombreUsuarioYComentario\" : \"portaNombreUsuarioYComentarioEditando\"} >\r\n*/","import Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\nconst EsqueletoCarrouselActivities = () => {\r\n    return (\r\n        <SkeletonTheme color=\"#eceff1\" highlightColor=\"#90caf9\">\r\n            <Skeleton duration={0.25} width=\"60vw\" height=\"40vh\" />\r\n        </SkeletonTheme>\r\n    )\r\n}\r\n\r\nexport default EsqueletoCarrouselActivities;","\r\nimport MiCarrousel from '../carrousel/MiCarousel'\r\nimport CajaCommentarios from './CajaComentario'\r\nimport EsqueletoCarrouselActivities from '../esqueletos/EsqueletoCarrousel'\r\n\r\nconst ItineraryActivities = ({ actividades = [], idItinerario, comentarios }) => {\r\n    return (\r\n        <div className=\"contenedorActivities\">\r\n            {actividades.length === 0\r\n                ? <EsqueletoCarrouselActivities />\r\n                :\r\n\r\n                <MiCarrousel\r\n                    className=\"mt-3\"\r\n                    elementos={actividades}\r\n                    cantidadElementosSlide={1}\r\n                    estiloSlide=\"slideEstilo-Activity\"\r\n                    estiloImagen=\"imagenCarrousel-Activity\"\r\n                    propTitulo=\"titulo\"\r\n                    propUrlImagen=\"imagen\"\r\n                    interval={0}\r\n                />\r\n            }\r\n            <div className=\"labelActividades mb-2 mt-2\">Activities</div>\r\n\r\n\r\n            <h3>Leave a Comment</h3>\r\n            <CajaCommentarios idItinerario={idItinerario} comentarios={comentarios} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ItineraryActivities;","import FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { useState} from 'react';\r\nimport {connect} from  'react-redux'\r\nimport { mostrarTostada,mostrarTostadaError500 } from '../helpers/tostadas.js';\r\nimport cityItineraryActions from '../redux/actions/cityItineraryAction.js'\r\nconst BtnLike = ({itinerarioId,estaLikeado,cantidadLikes, usuarioLogueado,likearItinerario,  }) => {    \r\n    const [estado,setEstado] = useState({\r\n        estaLikeado,\r\n        cantidadLikes ,\r\n    })\r\n    const [peticionando,setPeticionando] = useState(false);\r\n    \r\n\r\n    const likear = async ()=>{\r\n        if(!usuarioLogueado){\r\n            return  mostrarTostada(\"info\",\"You must be logged in to like it\");\r\n        }\r\n        if(peticionando) return false\r\n\r\n        setPeticionando(true);\r\n\r\n        let estadoAntesDeActualizar = {...estado}\r\n        setEstado({\r\n            ...estado,\r\n            cantidadLikes : estado.estaLikeado? estado.cantidadLikes-1: estado.cantidadLikes+1,\r\n            estaLikeado: !estado.estaLikeado,\r\n        })\r\n        let respuesta;\r\n        try{\r\n            respuesta = await likearItinerario(usuarioLogueado.token,itinerarioId);\r\n            if(!respuesta.success) setEstado(estadoAntesDeActualizar)\r\n            setPeticionando(false)\r\n\r\n        }catch(e){\r\n            console.log(e)\r\n            mostrarTostadaError500();\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"portaLikes\">\r\n            <IconButton size=\"small\" color=\"secondary\" onClick={likear} >\r\n                {estado.estaLikeado && usuarioLogueado ? <FavoriteIcon /> : <FavoriteBorderIcon />}\r\n            </IconButton>\r\n            <span className=\"PriceDuration\">{estado.cantidadLikes}</span>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        usuarioLogueado : state.authReducer.usuarioLogueado\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    likearItinerario : cityItineraryActions.likearItinerario\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(BtnLike);","import LocalAtmIcon from '@material-ui/icons/LocalAtm';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport {  useState,useRef} from 'react';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Button from '@material-ui/core/Button';\r\nimport {makeStyles} from '@material-ui/core';\r\nimport {connect} from 'react-redux'\r\nimport cityItineraryActions from '../redux/actions/cityItineraryAction.js'\r\nimport ItineraryActivities from './activities/ItineraryActivities'\r\n\r\nimport BtnLike from './BtnLike'\r\n\r\n\r\nconst useStyle = makeStyles({\r\n    btnViewMoreEstilo :{\r\n        backgroundColor: \"#00bcd4\",\r\n        color:\"white\",\r\n        borderColor: \"#15e577\",\r\n        '&:hover':{\r\n            backgroundColor: \"#e0f7fa\",\r\n            color:\"#00bcd4\",\r\n            borderWidth: \"3px\",\r\n            borderColor:\"#564345\"\r\n        }\r\n    }\r\n});\r\nconst Itinerario = ({unItinerario,cargarActividadesDeItinerario}) => {\r\n    const misEstilos = useStyle();\r\n    const [estaExpandido,setEstaExpandido] = useState(false);\r\n    const [state,setState] = useState({\r\n        actividades:[],\r\n    })\r\n    const refBtnViewMore = useRef(null);\r\n\r\n    \r\n    function crearNComponentes(n,componente){\r\n        let aux = Array.from(new Array(n), (_,indice)=> <div key= {indice}>{componente}</div> )\r\n        return  aux;\r\n    }\r\n\r\n    const  cargarActividades = async ()=>{\r\n        setEstaExpandido(!estaExpandido)\r\n        refBtnViewMore.current.focus();\r\n        if(state.actividades?.length === 0){\r\n            try{\r\n                let respuesta = await cargarActividadesDeItinerario(unItinerario._id);\r\n                setState({\r\n                    ...state,\r\n                    actividades:respuesta,\r\n                })\r\n            }catch(e){\r\n                console.log(e);\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n        <div className = \"contenedorItinerario\">\r\n            <div className =\"tituloItinerario\"><h3>{unItinerario.titulo}</h3></div>\r\n            <div className=\"autorItinerarioFoto\" style={{backgroundImage : `url(/assets/itinerarios/${unItinerario.autorFoto}`}}></div>\r\n            <h4 className =\"mt-3\">{unItinerario.autorNombre}</h4>\r\n            <div className=\"portaPrecioDuracion\">\r\n                <div className =\"portaPrecio\">\r\n                    <span className =\"PriceDuration\">Price </span>\r\n                    <div className=\"portaSVGPriceDuration\">\r\n                        {crearNComponentes(unItinerario.precio,<LocalAtmIcon style= {{color:\"green\"}} />)}\r\n                    </div>\r\n                </div>\r\n                <div className =\"portaDuracion\">\r\n                    <span className =\"PriceDuration\">Duration </span>\r\n                    <div className=\"portaSVGPriceDuration\">\r\n                        {crearNComponentes(unItinerario.duracion,<AccessTimeIcon style= {{color:\"#1565c0\"}}/>)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/*eslint-disable-next-line*/}\r\n            <a href=\"#\" ref= {refBtnViewMore}></a>\r\n            <div className=\"portalikesHashtags mt-3\" >\r\n                <BtnLike itinerarioId = {unItinerario._id} estaLikeado={unItinerario.estaLikeado} cantidadLikes={unItinerario.likes} />\r\n                <div className = \"portaHashtags mt-3\">\r\n                    {unItinerario.hashTags.map(hashTag => <span key={hashTag} className=\"hashtags \">{hashTag}</span>)}\r\n                </div>\r\n            </div>\r\n\r\n            <Collapse in={estaExpandido} className=\"mt-3\">\r\n                <ItineraryActivities  actividades={state.actividades} idItinerario={unItinerario._id} comentarios={unItinerario.comentarios}/>\r\n            </Collapse> \r\n            <Button\r\n                className= {`${misEstilos.btnViewMoreEstilo} mt-3`}   \r\n                variant=\"contained\"\r\n                endIcon={estaExpandido?  <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                onClick = {cargarActividades}\r\n            >\r\n                {estaExpandido ? <>View Less</> : <>View More</>}\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        usuarioLogueado : state.authReducer.usuarioLogueado\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    cargarActividadesDeItinerario : cityItineraryActions.cargarActividadesDeItinerario,\r\n    likearItinerario : cityItineraryActions.likearItinerario\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Itinerario);","\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\nconst EsqueletoItinerario = () => {\r\n    return (\r\n\r\n        <SkeletonTheme color=\"#eceff1\" highlightColor=\"#90caf9\">\r\n            <div className=\"contenedorItinerario\">\r\n                <Skeleton duration={0.25} width=\"60vw\" height=\"20px\" />\r\n                <Skeleton duration={0.25} circle={true} height=\"10vw\" width=\"10vw\"  className=\"mt-3\"/>\r\n                <Skeleton duration={0.25} width=\"50vw\" height=\"20px\" className=\"mt-3\" />\r\n\r\n                <div className=\"portaPrecioDuracion mt-3 w-100\">\r\n                    <Skeleton duration={0.25} width=\"15vw\" height=\"20px\"  />\r\n                    <Skeleton duration={0.25} width=\"15vw\" height=\"20px\" />\r\n                </div>\r\n                <div className=\"portaPrecioDuracion mt-1 w-100\">\r\n                    <Skeleton duration={0.25} width=\"15vw\" height=\"20px\"  />\r\n                    <Skeleton duration={0.25} width=\"15vw\" height=\"20px\" />\r\n                </div>\r\n\r\n                <div className=\"portalikesHashtags mt-3\">\r\n                    <Skeleton duration={0.25} width=\"10vw\" height=\"10px\" />\r\n                    <Skeleton duration={0.25} width=\"60vw\" height=\"10px\" className=\"mt-3\" />\r\n                </div>\r\n            </div>\r\n        </SkeletonTheme>\r\n\r\n    )\r\n}\r\nexport default EsqueletoItinerario;","import React from 'react'\r\nimport { Button } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\nimport { connect } from 'react-redux'\r\nimport cityItineraryActions from '../redux/actions/cityItineraryAction'\r\nimport Itinerario from '../components/Itinerario'\r\nimport EsqueletoItinerario from '../components/esqueletos/EsqueletoItinerario'\r\nimport { mostrarTostada } from '../helpers/tostadas';\r\nclass City extends React.Component {\r\n    state = {\r\n        ciudad: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let idCiudad = this.props.match.params.id;\r\n        let ciudadActual;\r\n        if(this.props.ciudades.length !== 0){\r\n            ciudadActual = this.props.ciudades.find(ciudad => idCiudad === ciudad._id)\r\n        }else{\r\n            try{\r\n                ciudadActual = await this.props.cargarCiudad(idCiudad)\r\n            }catch(e){ //en que casos llega aca ???\r\n                mostrarTostada(\"error\",\"ups, reload please\")\r\n            }\r\n        }\r\n        this.setState({\r\n            ciudad: ciudadActual\r\n        })\r\n        this.props.cargarItinerarios(idCiudad);\r\n    }\r\n    componentWillUnmount(){\r\n        this.props.restaurarItinerarios()\r\n    }    \r\n\r\n    render() {\r\n        if (this.props.loading) {\r\n            return (\r\n                <div className=\"cityItinerariesContenido\">\r\n                    <SkeletonTheme color=\"#eceff1\" highlightColor=\"#90caf9\">\r\n                        <Skeleton duration={0.25} width=\"90vw\" height=\"60vh\" className=\"esqueletoFotoCiudadCities\" />\r\n                    </SkeletonTheme>\r\n                    <EsqueletoItinerario />\r\n                    <EsqueletoItinerario />\r\n                </div>\r\n            )\r\n        }\r\n        if(!this.props.loading){\r\n            if(!this.props.error500Itinerarios && !this.state.ciudad)\r\n                return (\r\n                    <div className=\"cityItinerariesContenido\">\r\n                        <h1>Ups, please go back to Cities </h1>\r\n                        <Link to=\"/cities\" className=\" LinkBlancoNone mt-5\">\r\n                            <Button variant=\"contained\" color=\"primary\" className=\"text-white\">\r\n                                Go back to Cities\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                )\r\n        }\r\n        return (\r\n            <div className=\"cityItinerariesContenido\">\r\n                <div className=\"cityItinerariesPortada\" style={{ backgroundImage: `url(/assets/ciudades/${this.state.ciudad.foto})` }} >\r\n                    <h1>{this.state.ciudad.nombreCiudad}</h1>\r\n                </div>\r\n\r\n                { this.props.itinerariosCiudad.length === 0 &&\r\n                    <div className=\"sinItinerariosContenedor\" style={{ backgroundImage: \"url(/assets/itinerarios/sinItinerarios.jpg)\" }}>\r\n                        <div className=\"sinItinerariosContenido\">\r\n                            Sorry, we don't have any itinerary in this city yet :(\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {this.props.itinerariosCiudad.map(itinerario => (\r\n                    <Itinerario key={itinerario._id} unItinerario={itinerario} />\r\n                ))}\r\n\r\n                <Link to=\"/cities\" className=\" LinkBlancoNone mt-5\">\r\n                    <Button variant=\"contained\" color=\"primary\" className=\"text-white\">\r\n                        Go back to Cities\r\n                    </Button>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ciudades: state.citiesReducer.todasLasCiudades,\r\n        itinerariosCiudad: state.cityItineraryReducer.itinerariosCiudad,\r\n        loading: state.cityItineraryReducer.loading,\r\n        \r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    cargarItinerarios: cityItineraryActions.cargarItinerarios,\r\n    cargarCiudad: cityItineraryActions.cargarCiudad,\r\n    restaurarItinerarios: cityItineraryActions.restaurarItinerarios\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(City);","import Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useState } from 'react'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport authActions from '../../redux/actions/authActions'\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst useStyle = makeStyles({\r\n  menuDesplegable: {\r\n    marginTop: \"2.5em\",\r\n    \r\n  }\r\n\r\n});\r\n\r\nconst BotonLogin = (props) => {\r\n  const misEstilos = useStyle();\r\n  const [menuAbierto, setMenuAbierto] = useState(false);\r\n\r\n\r\n\r\n  // que un Handler es un \"manejador\", algo que es capaz de \"recibir\" un evento, un mensaje, etc y actuar en función al mismo.\r\n  const handleClick = (event) => {\r\n    setMenuAbierto(event.currentTarget); //Al abrir el Menu , le pongo como valor el elemento\r\n  };\r\n\r\n  const cerrarMenu = () => {\r\n    setMenuAbierto(false);\r\n  };\r\n\r\n  const desloguearse = () => {\r\n    cerrarMenu();\r\n    props.desloguearUsuario();\r\n  }\r\n  \r\n  const { usuarioLogueado } = props\r\n\r\n  //valores por defecto\r\n  let usuarioAvatar = usuarioLogueado\r\n  ? usuarioLogueado.usuarioAvatar\r\n  : \"./assets/header/usuarioGenerico.jpg\"\r\n  \r\n  \r\n  return (\r\n    <div className=\"portaNombreUsuarioAvatar\">\r\n      <Hidden xsDown>\r\n        {usuarioLogueado && <div className=\"nombreUsuario\">{usuarioLogueado.nombreCompleto}</div>}\r\n      </Hidden>      \r\n      \r\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} color=\"inherit\" >\r\n        <Avatar src={usuarioAvatar} />\r\n        <ArrowDropDownIcon fontSize=\"large\" />\r\n        \r\n      </Button>\r\n      <Menu className={misEstilos.menuDesplegable}\r\n        id=\"simple-menu\"\r\n        anchorEl={menuAbierto}  //esto es usado para ver la posicion del menu\r\n        //keepMounte\r\n        open={Boolean(menuAbierto)} //transformamos lo que hay dentro de menuAbierto en booleano (Castear?), si es true el menu es visible\r\n        onClose={cerrarMenu}  // la accion que hace al cerarse el menu\r\n      >\r\n        {!usuarioLogueado && (\r\n          [\r\n            <NavLink to=\"/login\" className=\"btnLoginLink\" activeClassName=\"btnLoginLinkActive\" key =\"/login\">\r\n              <MenuItem onClick={cerrarMenu}>Log In</MenuItem>\r\n            </NavLink>,\r\n            <NavLink to=\"/signup\" className=\"btnLoginLink\" activeClassName=\"btnLoginLinkActive\" key =\"/signup\">\r\n              <MenuItem onClick={cerrarMenu}>Sign Up</MenuItem>\r\n            </NavLink>\r\n          ]\r\n        )}\r\n\r\n        {usuarioLogueado && ( <MenuItem className=\"btnLoginLink\" onClick={desloguearse}>Log out</MenuItem> )}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    usuarioLogueado: state.authReducer.usuarioLogueado\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  desloguearUsuario: authActions.desloguearUsuario\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(BotonLogin);","\r\nimport { NavLink } from 'react-router-dom'\r\nimport {  Typography} from '@material-ui/core'\r\nconst LinkNav = ( {link:{contenidoTexto,estiloClase,url}}) => {\r\n    return (\r\n        <NavLink exact to={url} key={url} className=\"estilosLinkNav\" activeClassName=\"estilosLinkNavActive\">\r\n            <Typography\r\n                variant=\"h6\"\r\n                color=\"initial\"\r\n                className={estiloClase}\r\n            >\r\n                {contenidoTexto}\r\n            </Typography>\r\n        </NavLink>\r\n    );\r\n}\r\nexport default LinkNav","import { AppBar, Toolbar, IconButton, makeStyles } from '@material-ui/core'\r\nimport BotonLogin from './BotonLogin';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom'\r\nimport LinkNav from './LinkNav'\r\n\r\n//podemos llamar al theme que tenemos  para cambiar algunas propiedades que tiene por defecto\r\n//(theme) =>{}) es una funcion de flecha que llama el tema y devuelva el objeto que debe ir dentro de makeStyle\r\nconst useStyles = makeStyles(theme => ({\r\n    //para dar un margen bottom al navBar y no tape los contenidos por tener position fixed\r\n    //colocara el alto(margin bottom) de forma dinamica (ya que no para todos los tamaños tiene la misma altura)\r\n    //Al toolBar porque se adapta al tamaño de este\r\n    //navBarBottonMargin: theme.mixins.toolbar,\r\n\r\n    navMargin: theme.mixins.toolbar,\r\n    navegacionLinks: {\r\n        flexGrow: \"1\",\r\n        display: \"flex\",\r\n    },\r\n    menuHamburguesaBoton: {\r\n        marginRight: theme.spacing(2),\r\n        //devuelve una media query que se aplica para los menores a sm 600px\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        }\r\n    },\r\n    navBoton: {\r\n\r\n        marginRight: theme.spacing(2),\r\n        //devuelve una media query que se aplica para los mayores a sm 600px\r\n        [theme.breakpoints.down('sm')]: {\r\n            display: 'none',\r\n        }\r\n    },\r\n}))\r\n\r\n\r\n\r\nconst NavBar = ({ abrirCerrarDrawer }) => {\r\n    //este me devolvera las clases en un objeto \r\n    const misEstilos = useStyles();\r\n    const links = [\r\n        { contenidoTexto: \"Home\", estiloClase: misEstilos.navBoton, url: \"/\", },\r\n        { contenidoTexto: \"Cities\", estiloClase: misEstilos.navBoton, url: \"/cities\", }\r\n    ];\r\n\r\n    //Creo un componente que tendra los botones del navNar\r\n    \r\n    return (\r\n        <header>\r\n            <AppBar position=\"fixed\" >  {/*esta el la barra,  se le puede poner como atributo postion = \"sticky para que no tape contenido\" */}\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        className={misEstilos.menuHamburguesaBoton}\r\n                        onClick={abrirCerrarDrawer}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    {/*los links de la barra de navegacion*/}\r\n                    <Link  to=\"/\" className =\"LinkBlancoNone\">\r\n                        <div className=\"estiloLogoNav\">\r\n                            <img src=\"/assets/logoCompleto2.png\" className =\"logoNav\" alt=\"logoNavBar\"></img>\r\n                            <h5>MyTinerary</h5>\r\n                        </div>\r\n                    </Link>\r\n                    <div className = {misEstilos.navegacionLinks}>\r\n                        {links.map(link =>  <LinkNav key={link.url}  link = {link}/> )}\r\n                    </div>\r\n                    \r\n                    <BotonLogin />\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className={misEstilos.navMargin}></div>\r\n        </header>\r\n    );\r\n}\r\nexport default NavBar;\r\n\r\n\r\n//notas\r\n//boton desplegable del Material UI: te deja ocultarlo si le pones un  div como padre  y ocultas al div","import { List, ListItem, ListItemIcon, ListItemText, Divider } from '@material-ui/core';\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport authActions from '../../redux/actions/authActions'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst ListaSimple = ({ cerrarDrawer, usuarioLogueado, desloguearUsuario}) => {\r\n    const desloguearse = () => {\r\n        cerrarDrawer();\r\n        desloguearUsuario();\r\n    }\r\n    const { pathname } = useLocation();\r\n    return (\r\n        <div>\r\n            {/*componentes: es para decirle cual es el elemento que sera el envolvedor */}\r\n            <List component=\"nav\" >\r\n                {/*lo decimos que cada item sera un button*/}\r\n                <NavLink exact to=\"/\" className=\"btnMovilLoginLink\" activeClassName=\"btnMovilLoginLinkActive\">\r\n                    <ListItem button onClick={cerrarDrawer} >\r\n                        <ListItemIcon >\r\n                            <HomeIcon className={pathname === \"/\" ? \"btnMovilLoginLinkActive\" : \"btnMovilLoginLink\"}/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Home\" />\r\n                    </ListItem>\r\n                </NavLink>\r\n\r\n                <NavLink to=\"/cities\" className=\"btnMovilLoginLink\" activeClassName=\"btnMovilLoginLinkActive\">\r\n                    <ListItem button onClick={cerrarDrawer}>\r\n                        <ListItemIcon >\r\n                            <LocationCityIcon className={pathname === \"/cities\" ? \"btnMovilLoginLinkActive\" : \"btnMovilLoginLink\"}/>\r\n                        </ListItemIcon>\r\n                        <ListItemText > Cities</ListItemText>\r\n                    </ListItem>\r\n                </NavLink>\r\n\r\n                <Divider />\r\n\r\n                {!usuarioLogueado && (\r\n                    [\r\n                        <NavLink to=\"/login\" className=\"btnMovilLoginLink\" activeClassName=\"btnMovilLoginLinkActive\" key =\"/login\">\r\n                            <ListItem button onClick={cerrarDrawer}>\r\n                                <ListItemIcon >\r\n                                    <PersonIcon className={pathname === \"/login\" ? \"btnMovilLoginLinkActive\" : \"btnMovilLoginLink\"}/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Log in\" />\r\n                            </ListItem>\r\n                        </NavLink>,\r\n                        <NavLink to=\"/signup\" className=\"btnMovilLoginLink\" activeClassName=\"btnMovilLoginLinkActive\" key = \"/signup\">\r\n                            <ListItem button onClick={cerrarDrawer}>\r\n                                <ListItemIcon >\r\n                                    <PersonAddIcon className={pathname === \"/signup\" ? \"btnMovilLoginLinkActive\" : \"btnMovilLoginLink\"}/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Sign Up\" />\r\n                            </ListItem>\r\n                        </NavLink>\r\n                    ]\r\n                )}\r\n                {usuarioLogueado &&(\r\n                    <ListItem button onClick={desloguearse}>\r\n                        <ListItemIcon >\r\n                            <ExitToAppIcon className=\"btnMovilLoginLink\"/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Log Out\" />\r\n                    </ListItem>\r\n                )}\r\n\r\n\r\n            </List>\r\n        </div >\r\n\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        usuarioLogueado: state.authReducer.usuarioLogueado\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    desloguearUsuario: authActions.desloguearUsuario\r\n  }\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ListaSimple);","import {makeStyles,Drawer,Divider} from '@material-ui/core'\r\nimport ListaMobile from './ListaMobile'\r\n\r\nconst anchoCajon = \"240px\";\r\nconst useStyles = makeStyles(theme => ({\r\n    cajon: {\r\n        width : anchoCajon,\r\n        flexShrink: 0,\r\n    },\r\n    cajonPaper: {\r\n        width :anchoCajon,\r\n        backgroundColor:\"#343a40\",\r\n        color:\"white\"\r\n    },\r\n    //para  que tenga un espaciado al principio del tamaño del nav\r\n    navBarBottonMargin: theme.mixins.toolbar,\r\n}));\r\n\r\n// recibo por props que tipo de cajon sera, si esta abierto, y la funcion para cambianr el estado de header del abierto\r\nconst Cajon = ({variante,abierto,abrirCerrarDrawer})=>{\r\n    const misEstilos = useStyles();\r\n    return(\r\n        <Drawer \r\n            className ={misEstilos.cajon}  //estilos \r\n            classes ={{\r\n                paper: misEstilos.cajonPaper, //le agrego al fondo un ancho \r\n            }}\r\n            anchor = \"left\"  //se abrita desde la izquierda\r\n            variant={variante} //el tipo de cajon que sera, en este caso que se puede abrir y cerrar\r\n            open = {abierto} //esto recibe un boolean para aparecer abierto o cerrado\r\n            \r\n            //le mando la funcion para cerrar el cajon para que cambie el estado, gracias a esto re renderizara\r\n            //el componente que tiene a este componente , lo que hara que este tambien se re renderize por cambiar sus props\r\n            onClose = {abrirCerrarDrawer}\r\n        >\r\n        {/*classes es un objeto donde podemos señalar estilos de Css para el drawer*/}\r\n        \r\n        <div className ={misEstilos.navBarBottonMargin}></div>\r\n        <Divider />\r\n         <ListaMobile cerrarDrawer = {abrirCerrarDrawer} />\r\n        </Drawer>\r\n    );\r\n}\r\n\r\n\r\nexport default Cajon ;","import NavBar from './NavBar'\r\nimport {Hidden} from '@material-ui/core'\r\nimport CajonListaMobile from './CajonListaMobile'\r\nimport {useState} from 'react'\r\n\r\n\r\n\r\n\r\nconst Header = () => {\r\n    const [abierto, setAbierto] = useState(false); //Estado abrir o cerrar el menu mobile\r\n    function abrirCerrarDrawer() {\r\n        setAbierto(!abierto);\r\n    }                \r\n    return (\r\n        <header>\r\n            <NavBar abrirCerrarDrawer = {abrirCerrarDrawer}/>\r\n            <Hidden mdUp>\r\n                {/*la variante es el tipo que sera , temporary es para que se puede abrir y cerrar */}\r\n                <CajonListaMobile variante=\"temporary\" abierto={abierto} abrirCerrarDrawer={abrirCerrarDrawer} />\r\n            </Hidden>\r\n        </header>        \r\n    );\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\n","import { Container, Row, Col, } from 'reactstrap';\r\nimport {Link} from 'react-router-dom'\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <footer className=\"pt-5 mt-5\">\r\n            <Container fluid={true}>\r\n                <Row>\r\n                    <Col xs=\"12\" lg=\"4\" className=\"d-flex flex-column align-items-center mt-3\">\r\n                        <img src=\"/assets/logoCompleto2.png\" alt=\"logoFooter\" className =\"logoFooter\"></img>\r\n                        <h1>MyTinerary</h1>\r\n                    </Col>\r\n                    <Col xs=\"12\" lg=\"4\" className=\"d-flex flex-column align-items-center mt-3\">\r\n                        <hr className =\"d-lg-none divisorFooter\"></hr>\r\n                        <h4>Site Map</h4>\r\n                        <Link to = \"/\">\r\n                            <h5 className=\"mt-3\">Home</h5>\r\n                        </Link>\r\n                        <Link to = \"/cities\"> \r\n                            <h5 className=\"mt-3\">Cities</h5>\r\n                        </Link>\r\n                    </Col>\r\n                    <Col xs=\"12\" lg=\"4\" className=\"d-flex flex-column align-items-center mt-3\">\r\n                    <hr className =\"d-lg-none divisorFooter\"></hr>\r\n                        <h4>WE ARE SOCIAL!</h4>\r\n                        <div className=\"d-flex justify-content-between mt-3 w-50\">\r\n                            <div className=\"social\" style={{ backgroundImage: \"url(/assets/footer/facebook.png\" }}></div>\r\n                            <div className=\"social\" style={{ backgroundImage: \"url(/assets/footer/twitter.png\" }}></div>\r\n                            <div className=\"social\" style={{ backgroundImage: \"url(/assets/footer/google.png\" }}></div>\r\n                            <div className=\"social\" style={{ backgroundImage: \"url(/assets/footer/youtube.png\" }}></div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <div className=\"d-flex justify-content-center align-items-center bg-secondary mt-3 text-center\">\r\n                <h4>MYTINERARY ALL RIGHTS RESERVED ©</h4>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\n const ScrollToTop = () => {\r\n  const { pathname } = useLocation();\r\n  //useLocation() es un hook de react-router-dom que devuelve un objeto con variables\r\n  //entre ellas esta el pathname que es la url actual que esta en la barra \r\n  //este use effect se activara cada que cambia esa url , y srolleara a la posicion (0,0)\r\n  useEffect(() => {\r\n    window.onbeforeunload = function () { //para que se scrolle antes de refrescar la pagina\r\n      window.scrollTo(0, 0);\r\n    }\r\n    window.scrollTo(0,0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n\r\nexport default ScrollToTop;","import React from 'react';\r\nimport Home from './pages/Home.js'\r\nimport Cities from './pages/Cities.js'\r\nimport SignUp from './pages/SignUp.js'\r\nimport LogIn from './pages/LogIn.js'\r\nimport Error404 from './pages/ErrorHTTP/Error404'\r\nimport Error500 from './pages/ErrorHTTP/Error500'\r\nimport City from './pages/CityItineraries'\r\nimport './App.css'\r\nimport { BrowserRouter, Redirect, Switch, Route } from 'react-router-dom'\r\nimport Header from './components/headerComponentes/Header'\r\nimport Footer from './components/Footer.js';\r\nimport ScrollToTop from './components/ScrollToTop'\r\nimport {connect} from 'react-redux'\r\nimport authActions from './redux/actions/authActions.js';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass App extends React.Component {\r\n \r\n    render() {\r\n        const token = localStorage.getItem(\"token\");\r\n        //veo que no haya en el store un usuario logueado y que haya un token en el localStorage\r\n        if(!this.props.usuarioLogueado && token && token !== \"undefined\"){\r\n            this.props.logueoForzadoPorLS(JSON.parse(token),this.props.history)\r\n        }\r\n\r\n        if(!this.props.usuarioLogueado && token && token !== \"undefined\"){\r\n            return (\r\n                <div className =\"pantallaDeCarga\">\r\n                    <CircularProgress size={100}/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <BrowserRouter>\r\n                <ToastContainer/>\r\n                <ScrollToTop />\r\n                <div className=\"bg-dark text-white contenidoBody\">\r\n                    <Header />\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Home} />\r\n                        <Route exact path=\"/cities\" component={Cities} />\r\n                        {!this.props.usuarioLogueado && [\r\n                            <Route path=\"/signup\" component={SignUp} key=\"/signup\"/>,\r\n                            <Route path=\"/login\" component={LogIn} key=\"/login\"/>\r\n                        ]}\r\n                        \r\n                        <Route path=\"/cities/:id\" component={City} />\r\n                        <Route path=\"/error404\" component={Error404} />\r\n                        <Route path=\"/error500\" component={Error500} />\r\n                        <Redirect to=\"/\" />\r\n                    </Switch>\r\n                    <Footer />\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        usuarioLogueado : state.authReducer.usuarioLogueado\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    logueoForzadoPorLS: authActions.logueoForzadoPorLS\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);","const inicialState = {\r\n    ciudadesAMostrar: [],\r\n    todasLasCiudades: [],\r\n    loading: true,\r\n    error500:false\r\n}\r\n\r\nconst citiesReducer = (state = inicialState, action) => {\r\n    switch (action.type) {\r\n        case \"CARGAR_CIUDADES\":\r\n            return {\r\n                ...state,\r\n                ciudadesAMostrar: action.payload,\r\n                todasLasCiudades: action.payload,\r\n                loading: false\r\n            }\r\n        \r\n\r\n\r\n        case \"CARGAR_CIUDADES_A_MOSTRAR\":\r\n            let nuevasCiudades ;\r\n            let valorInput = action.payload;\r\n            if(valorInput === \"\"){\r\n                nuevasCiudades = state.todasLasCiudades;\r\n            }else{\r\n                nuevasCiudades = state.todasLasCiudades.filter(ciudad => {\r\n                    return ciudad.nombreCiudad.trim().toLowerCase().startsWith(action.payload.trim().toLowerCase());\r\n                });\r\n            }\r\n            return {\r\n                ...state,\r\n                ciudadesAMostrar: nuevasCiudades\r\n            } \r\n        case \"ERROR_FETCHEO\": \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error500:true\r\n            }\r\n        \r\n        case \"RESTAURAR_ESTADO_INICIAL_CITIES\":\r\n            return inicialState;\r\n        default:\r\n            return state;\r\n           \r\n    }\r\n}\r\n\r\nexport default citiesReducer;","const initialState = {\r\n    itinerariosCiudad: [],\r\n    loading: true,\r\n}\r\n\r\nconst cityItineraryReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"CARGAR_ITINERARIOS\":\r\n            return {\r\n                ...state,\r\n                itinerariosCiudad: action.payload,\r\n                loading: false\r\n            }\r\n        case \"ERROR_CARGAR_ITINERARIOS\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n        case \"ACTUALIZAR_ITINERARIO\":\r\n            let itinerariosActualizados = state.itinerariosCiudad.map(itinerario =>{\r\n                if(itinerario._id === action.payload._id)\r\n                    return action.payload;\r\n                return itinerario;\r\n            })\r\n            return {\r\n                ...state,\r\n                itinerariosCiudad: itinerariosActualizados\r\n            } \r\n        case \"RESTAURAR_ITINERARIOS\":\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cityItineraryReducer;","const inicialState ={\r\n    usuarioLogueado : null,\r\n}\r\n\r\nconst authReducer = (state = inicialState, action) =>{\r\n    switch(action.type){\r\n        case \"LOGUEAR_USER\":\r\n            localStorage.setItem(\"token\",JSON.stringify(action.payload.token));\r\n            return {\r\n                ...state,\r\n                usuarioLogueado : action.payload  \r\n            };\r\n        case \"DESLOGUEAR_USER\":\r\n            localStorage.clear();\r\n            return {\r\n                ...state,\r\n                usuarioLogueado:null\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\nexport default authReducer;","import citiesReducer from './citiesReducer'\r\nimport cityItineraryReducer from './cityItineraryReducer'\r\nimport authReducer from './authReducer'\r\nimport {combineReducers} from 'redux'\r\nconst mainReducer = combineReducers({\r\n    citiesReducer : citiesReducer,\r\n    cityItineraryReducer,\r\n    authReducer\r\n})\r\n\r\n\r\nexport default mainReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {createStore,applyMiddleware} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport mainReducer from './redux/reducers/mainReducer'\r\nconst miStore = createStore(mainReducer,applyMiddleware(thunk))\r\nReactDOM.render(\r\n  <Provider store = {miStore}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}